ext {
	liferayProjectDir = "${rootDir}/../../.."
	serviceFile = "src/main/resources/service.xml"
}

configurations {
	servicebuilder
}

dependencies {
	servicebuilder files(["${liferayProjectDir}/portal-service/classes"])
	servicebuilder files(["${liferayProjectDir}/util-java/classes"])

	servicebuilder fileTree(
		dir:"${liferayProjectDir}/lib/development",
		includes: ["**/*.jar"]
	)
}

task buildService(type: JavaExec) {
	maxHeapSize '1024M'
	jvmArgs '-Xmx1024m -Xss2048k -XX:MaxPermSize=512m'
	args '-Dexternal-properties=', 'com/liferay/portal/tools/dependencies/portal-tools.properties'
	args '-Dorg.apache.commons.logging.Log=' , 'org.apache.commons.logging.impl.Log4JLogger'
	args 'service.input.file=', ${project.ext.serviceFile}
	args 'service.hbm.file=', 'src/main/resources/META-INF/module-hbm.xml'
	args 'service.model.hints.file=', 'src/main/resources/META-INF/model-hints.xml'
	args 'service.spring.file=', 'src/main/resources/META-INF/spring.xml'
	args 'service.api.dir=', "${project.ext.apiDir}/src/main/java"
	args 'service.remoting.file=', "${project.ext.webDir}/src/main/resources/WEB-INF/remoting-servlet.xml"
	args 'service.sql.dir=', 'sql'
	args 'service.sql.file=', 'tables.sql'
	args 'service.sql.indexes.file=', 'indexes.sql'
	args 'service.sql.sequences.file=', 'sequences.sql'
	args 'service.bean.locator.util=', 'com.liferay.portal.kernel.bean.PortalBeanLocatorUtil'
	args 'service.props.util=', 'com.liferay.portal.util.PropsUtil'
	args 'service.target.entity.name=', "${project.ext.targetEntityName} service.test.dir=src/main/test/integration"
	classpath = configurations.servicebuilder.asPath
	main = 'com.liferay.portal.tools.servicebuilder.ServiceBuilder'
}
